// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PublicSpaceMaintenanceRequestMS.Data;

#nullable disable

namespace PublicSpaceMaintenanceRequestMS.Migrations
{
    [DbContext(typeof(PublicSpaceMaintenanceRequestDbDBContext))]
    [Migration("20240618142825_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PublicSpaceMaintenanceRequestMS.Data.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Admins", (string)null);
                });

            modelBuilder.Entity("PublicSpaceMaintenanceRequestMS.Data.Citizen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Citizens", (string)null);
                });

            modelBuilder.Entity("PublicSpaceMaintenanceRequestMS.Data.Complete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequestId")
                        .IsUnique();

                    b.ToTable("Completes");
                });

            modelBuilder.Entity("PublicSpaceMaintenanceRequestMS.Data.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "UQ_Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Departments", (string)null);
                });

            modelBuilder.Entity("PublicSpaceMaintenanceRequestMS.Data.InProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequestId")
                        .IsUnique();

                    b.ToTable("InProgresses");
                });

            modelBuilder.Entity("PublicSpaceMaintenanceRequestMS.Data.Officer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Officers", (string)null);
                });

            modelBuilder.Entity("PublicSpaceMaintenanceRequestMS.Data.Pending", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequestId")
                        .IsUnique();

                    b.ToTable("Pendings");
                });

            modelBuilder.Entity("PublicSpaceMaintenanceRequestMS.Data.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssignedDepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("CitizenId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RequestStatus");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("AssignedDepartmentId");

                    b.HasIndex("CitizenId");

                    b.HasIndex(new[] { "CreateDate" }, "IX_CreateDate");

                    b.HasIndex(new[] { "Status" }, "IX_Status");

                    b.ToTable("Requests", (string)null);
                });

            modelBuilder.Entity("PublicSpaceMaintenanceRequestMS.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Firstname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Lastname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Phonenumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Lastname" }, "IX_LASTNAME");

                    b.HasIndex(new[] { "Email" }, "UQ_EMAIL")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex(new[] { "Username" }, "UQ_USERNAME")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("PublicSpaceMaintenanceRequestMS.Data.Admin", b =>
                {
                    b.HasOne("PublicSpaceMaintenanceRequestMS.Data.User", "User")
                        .WithOne("Admin")
                        .HasForeignKey("PublicSpaceMaintenanceRequestMS.Data.Admin", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Admins_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PublicSpaceMaintenanceRequestMS.Data.Citizen", b =>
                {
                    b.HasOne("PublicSpaceMaintenanceRequestMS.Data.User", "User")
                        .WithOne("Citizen")
                        .HasForeignKey("PublicSpaceMaintenanceRequestMS.Data.Citizen", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Citizens_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PublicSpaceMaintenanceRequestMS.Data.Complete", b =>
                {
                    b.HasOne("PublicSpaceMaintenanceRequestMS.Data.Request", "Request")
                        .WithOne("Complete")
                        .HasForeignKey("PublicSpaceMaintenanceRequestMS.Data.Complete", "RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("PublicSpaceMaintenanceRequestMS.Data.InProgress", b =>
                {
                    b.HasOne("PublicSpaceMaintenanceRequestMS.Data.Request", "Request")
                        .WithOne("InProgress")
                        .HasForeignKey("PublicSpaceMaintenanceRequestMS.Data.InProgress", "RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("PublicSpaceMaintenanceRequestMS.Data.Officer", b =>
                {
                    b.HasOne("PublicSpaceMaintenanceRequestMS.Data.Department", "Department")
                        .WithMany("Officers")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PublicSpaceMaintenanceRequestMS.Data.User", "User")
                        .WithOne("Officer")
                        .HasForeignKey("PublicSpaceMaintenanceRequestMS.Data.Officer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Officers_Users");

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PublicSpaceMaintenanceRequestMS.Data.Pending", b =>
                {
                    b.HasOne("PublicSpaceMaintenanceRequestMS.Data.Request", "Request")
                        .WithOne("Pending")
                        .HasForeignKey("PublicSpaceMaintenanceRequestMS.Data.Pending", "RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("PublicSpaceMaintenanceRequestMS.Data.Request", b =>
                {
                    b.HasOne("PublicSpaceMaintenanceRequestMS.Data.Department", "AssignedDepartment")
                        .WithMany("Requests")
                        .HasForeignKey("AssignedDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PublicSpaceMaintenanceRequestMS.Data.Citizen", "Citizen")
                        .WithMany("Requests")
                        .HasForeignKey("CitizenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Requests_Citizens");

                    b.Navigation("AssignedDepartment");

                    b.Navigation("Citizen");
                });

            modelBuilder.Entity("PublicSpaceMaintenanceRequestMS.Data.Citizen", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("PublicSpaceMaintenanceRequestMS.Data.Department", b =>
                {
                    b.Navigation("Officers");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("PublicSpaceMaintenanceRequestMS.Data.Request", b =>
                {
                    b.Navigation("Complete");

                    b.Navigation("InProgress");

                    b.Navigation("Pending");
                });

            modelBuilder.Entity("PublicSpaceMaintenanceRequestMS.Data.User", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Citizen");

                    b.Navigation("Officer");
                });
#pragma warning restore 612, 618
        }
    }
}
